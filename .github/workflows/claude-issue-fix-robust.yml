name: Claude Issue Fix (Self-Healing)

on:
  issue_comment:
    types: [created]

jobs:
  claude-fix-with-validation:
    if: contains(github.event.comment.body, '@claude-ai')
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
      issues: write
      actions: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Test workflow health
      id: health-check
      run: |
        echo "Testing workflow environment..."
        
        # Check required secrets are available
        if [[ -z "${{ secrets.ANTHROPIC_API_KEY }}" ]]; then
          echo "❌ ANTHROPIC_API_KEY secret is missing"
          echo "health_status=failed" >> $GITHUB_OUTPUT
          echo "error_message=Missing ANTHROPIC_API_KEY secret" >> $GITHUB_OUTPUT
          exit 1
        fi
        
        # Check GitHub token permissions
        echo "✅ Secrets available"
        
        # Test basic git operations
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        
        echo "✅ Git configured"
        echo "health_status=healthy" >> $GITHUB_OUTPUT
        
    - name: Comment on issue if health check fails
      if: steps.health-check.outputs.health_status == 'failed'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `❌ **Claude Setup Failed**
            
            Error: ${{ steps.health-check.outputs.error_message }}
            
            Please check:
            1. ANTHROPIC_API_KEY secret is configured in repository settings
            2. Repository has proper permissions for GitHub Actions
            
            Once fixed, comment \`@claude-ai retry\` to try again.`
          });
          
    - name: Run Claude Code Action (Attempt 1)
      if: steps.health-check.outputs.health_status == 'healthy'
      id: claude-attempt-1
      continue-on-error: true
      uses: anthropics/claude-code-action@beta
      with:
        anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
        
    - name: Check attempt 1 success
      id: check-attempt-1
      if: steps.health-check.outputs.health_status == 'healthy'
      run: |
        if [[ "${{ steps.claude-attempt-1.outcome }}" == "success" ]]; then
          echo "✅ Claude succeeded on attempt 1"
          echo "claude_status=success" >> $GITHUB_OUTPUT
        else
          echo "❌ Claude failed on attempt 1, will retry"
          echo "claude_status=retry" >> $GITHUB_OUTPUT
        fi
        
    - name: Wait before retry
      if: steps.check-attempt-1.outputs.claude_status == 'retry'
      run: sleep 10
      
    - name: Run Claude Code Action (Attempt 2)
      if: steps.check-attempt-1.outputs.claude_status == 'retry'
      id: claude-attempt-2
      continue-on-error: true
      uses: anthropics/claude-code-action@beta
      with:
        anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
        
    - name: Check attempt 2 success
      id: check-attempt-2
      if: steps.check-attempt-1.outputs.claude_status == 'retry'
      run: |
        if [[ "${{ steps.claude-attempt-2.outcome }}" == "success" ]]; then
          echo "✅ Claude succeeded on attempt 2"
          echo "claude_status=success" >> $GITHUB_OUTPUT
        else
          echo "❌ Claude failed on attempt 2, will try once more"
          echo "claude_status=retry" >> $GITHUB_OUTPUT
        fi
        
    - name: Wait before final retry
      if: steps.check-attempt-2.outputs.claude_status == 'retry'
      run: sleep 15
      
    - name: Run Claude Code Action (Final Attempt)
      if: steps.check-attempt-2.outputs.claude_status == 'retry'
      id: claude-attempt-3
      continue-on-error: true
      uses: anthropics/claude-code-action@beta
      with:
        anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
        
    - name: Final status check and comment
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const healthStatus = '${{ steps.health-check.outputs.health_status }}';
          const attempt1 = '${{ steps.claude-attempt-1.outcome }}';
          const attempt2 = '${{ steps.claude-attempt-2.outcome }}';
          const attempt3 = '${{ steps.claude-attempt-3.outcome }}';
          
          let message = '';
          let success = false;
          
          if (healthStatus === 'failed') {
            return; // Already commented in health check step
          }
          
          if (attempt1 === 'success') {
            message = '✅ **Claude is now working on your issue!**\n\nSucceeded on first attempt. A PR should be created shortly.';
            success = true;
          } else if (attempt2 === 'success') {
            message = '✅ **Claude is now working on your issue!**\n\nSucceeded on second attempt after initial failure. A PR should be created shortly.';
            success = true;
          } else if (attempt3 === 'success') {
            message = '✅ **Claude is now working on your issue!**\n\nSucceeded on final attempt. A PR should be created shortly.';
            success = true;
          } else {
            message = `❌ **Claude failed to start after 3 attempts**
            
            Attempt results:
            - Attempt 1: ${attempt1 || 'not run'}
            - Attempt 2: ${attempt2 || 'not run'}  
            - Attempt 3: ${attempt3 || 'not run'}
            
            This might be due to:
            1. Temporary service issues
            2. Rate limiting
            3. Issue complexity requiring human intervention
            
            Please try again later or break down the issue into smaller tasks.`;
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });
          
          // Set job status
          if (!success) {
            core.setFailed('Claude failed to start after multiple attempts');
          }